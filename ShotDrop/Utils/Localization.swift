import Foundation
import SwiftUI

// MARK: - Localization Manager
class LocalizationManager: ObservableObject {
    static let shared = LocalizationManager()
    
    @Published var currentLanguage: Language {
        didSet {
            UserDefaults.standard.set(currentLanguage.rawValue, forKey: "selectedLanguage")
        }
    }
    
    enum Language: String, CaseIterable {
        case system = "system"
        case english = "en"
        case german = "de"
        case italian = "it"
        case spanish = "es"
        case french = "fr"
        case japanese = "ja"
        case chinese = "zh"
        
        var displayName: String {
            switch self {
            case .system: return "System"
            case .english: return "English"
            case .german: return "Deutsch"
            case .italian: return "Italiano"
            case .spanish: return "Espa√±ol"
            case .french: return "Fran√ßais"
            case .japanese: return "Êó•Êú¨Ë™û"
            case .chinese: return "‰∏≠Êñá"
            }
        }
        
        var flag: String {
            switch self {
            case .system: return "üåê"
            case .english: return "üá∫üá∏"
            case .german: return "üá©üá™"
            case .italian: return "üáÆüáπ"
            case .spanish: return "üá™üá∏"
            case .french: return "üá´üá∑"
            case .japanese: return "üáØüáµ"
            case .chinese: return "üá®üá≥"
            }
        }
    }
    
    private init() {
        let savedLanguage = UserDefaults.standard.string(forKey: "selectedLanguage") ?? "system"
        self.currentLanguage = Language(rawValue: savedLanguage) ?? .system
    }
    
    var effectiveLanguage: Language {
        if currentLanguage == .system {
            // Erkenne Systemsprache
            let systemLanguage = Locale.current.language.languageCode?.identifier ?? "en"
            return Language(rawValue: systemLanguage) ?? .english
        }
        return currentLanguage
    }
}

// MARK: - Localized Strings
enum LocalizedString {
    // App Info
    case appName
    case appDescription
    
    // Tabs
    case tabGeneral
    case tabShots
    case tabShortcuts
    case tabAppearance
    
    // General Settings
    case designSection
    case behaviorSection
    case colorScheme
    case autoShowOnCopy
    case autoShowOnCopyDescription
    case keepOpenOnIOSCopy
    case keepOpenOnIOSCopyDescription
    case autoHide
    case autoHideDescription
    case hideDelay
    case language
    
    // Shot Settings
    case shotManagement
    case maxShots
    case resetAndCleanup
    case deleteAllShots
    case deleteAllShotsDescription
    case deleteButton
    case resetToDefaults
    
    // Appearance Settings
    case livePreview
    case barSettings
    case barHeight
    case transparency
    case cornerRadius
    case shotSpacing
    
    // Shortcuts
    case hotkeys
    case openShotDrop
    case globalHotkey
    case changeButton
    case recordingPrompt
    case hotkeyPlaceholder
    
    // About
    case aboutShotDrop
    case version
    case universalClipboard
    
    // UI Elements
    case settingsTooltip
    case closeTooltip
    case ocrTooltip
    case noClipboardContent
    case copyButton
    case favoriteButton
    case unfavoriteButton
    case saveAsFile
    case deleteItem
    
    // Toast Messages
    case textCopied
    case textCopiedDescription
    case ocrExtracted
    
    // File Types
    case fileTypeImage
    case fileTypeText
    case fileTypePDF
    case fileTypeVideo
    case fileTypeAudio
    case fileTypeDocument
    case fileTypeArchive
    case fileTypeOther
    
    var localized: String {
        let language = LocalizationManager.shared.effectiveLanguage
        return getLocalizedString(for: language)
    }
    
    private func getLocalizedString(for language: LocalizationManager.Language) -> String {
        switch language {
        case .system, .english:
            return englishStrings
        case .german:
            return germanStrings
        case .italian:
            return italianStrings
        case .spanish:
            return spanishStrings
        case .french:
            return frenchStrings
        case .japanese:
            return japaneseStrings
        case .chinese:
            return chineseStrings
        }
    }
    
    // MARK: - English Strings
    private var englishStrings: String {
        switch self {
        case .appName: return "ShotDrop"
        case .appDescription: return "Universal Clipboard for macOS"
        case .tabGeneral: return "General"
        case .tabShots: return "Shots"
        case .tabShortcuts: return "Shortcuts"
        case .tabAppearance: return "Appearance"
        case .designSection: return "Design"
        case .behaviorSection: return "Behavior"
        case .colorScheme: return "Color Scheme"
        case .autoShowOnCopy: return "Auto-show when copying"
        case .autoShowOnCopyDescription: return "Bottom bar appears automatically when something is copied"
        case .keepOpenOnIOSCopy: return "Keep open on iOS copy"
        case .keepOpenOnIOSCopyDescription: return "Bottom bar stays open when copied from iOS device"
        case .autoHide: return "Auto-hide"
        case .autoHideDescription: return "Bottom bar hides automatically after some time"
        case .hideDelay: return "Hide delay"
        case .language: return "Language"
        case .shotManagement: return "Shot Management"
        case .maxShots: return "Maximum shots"
        case .resetAndCleanup: return "Reset & Cleanup"
        case .deleteAllShots: return "Delete all shots"
        case .deleteAllShotsDescription: return "Removes all saved screenshots and texts"
        case .deleteButton: return "Delete"
        case .resetToDefaults: return "Reset to defaults"
        case .livePreview: return "Live Preview"
        case .barSettings: return "Bar Settings"
        case .barHeight: return "Bar height"
        case .transparency: return "Transparency"
        case .cornerRadius: return "Corner radius"
        case .shotSpacing: return "Shot spacing"
        case .hotkeys: return "Hotkeys"
        case .openShotDrop: return "Open ShotDrop"
        case .globalHotkey: return "Global hotkey to open ShotDrop"
        case .changeButton: return "Change"
        case .recordingPrompt: return "Press the desired key combination..."
        case .hotkeyPlaceholder: return "üöß Hotkey functionality will be implemented"
        case .aboutShotDrop: return "About ShotDrop"
        case .version: return "Version 1.0"
        case .universalClipboard: return "Universal Clipboard Manager for macOS"
        case .settingsTooltip: return "ShotDrop Settings"
        case .closeTooltip: return "Close ShotDrop"
        case .ocrTooltip: return "Extract text via OCR"
        case .noClipboardContent: return "No clipboard content"
        case .copyButton: return "Copy"
        case .favoriteButton: return "Add to favorites"
        case .unfavoriteButton: return "Remove from favorites"
        case .saveAsFile: return "Save as file..."
        case .deleteItem: return "Delete"
        case .textCopied: return "Copied!"
        case .textCopiedDescription: return "Text copied to clipboard and can be pasted into tools"
        case .ocrExtracted: return "Text extracted from image and copied to clipboard"
        case .fileTypeImage: return "Image"
        case .fileTypeText: return "Text"
        case .fileTypePDF: return "PDF"
        case .fileTypeVideo: return "Video"
        case .fileTypeAudio: return "Audio"
        case .fileTypeDocument: return "Document"
        case .fileTypeArchive: return "Archive"
        case .fileTypeOther: return "File"
        }
    }
    
    // MARK: - German Strings
    private var germanStrings: String {
        switch self {
        case .appName: return "ShotDrop"
        case .appDescription: return "Universal Clipboard f√ºr macOS"
        case .tabGeneral: return "Allgemein"
        case .tabShots: return "Shots"
        case .tabShortcuts: return "Shortcuts"
        case .tabAppearance: return "Erscheinungsbild"
        case .designSection: return "Design"
        case .behaviorSection: return "Verhalten"
        case .colorScheme: return "Farbschema"
        case .autoShowOnCopy: return "Automatisch anzeigen beim Kopieren"
        case .autoShowOnCopyDescription: return "Bottom Bar wird automatisch angezeigt wenn etwas kopiert wird"
        case .keepOpenOnIOSCopy: return "Bei iOS Copy offen lassen"
        case .keepOpenOnIOSCopyDescription: return "Bottom Bar bleibt offen wenn von iOS-Ger√§t kopiert wird"
        case .autoHide: return "Automatisch ausblenden"
        case .autoHideDescription: return "Bottom Bar wird nach einiger Zeit automatisch ausgeblendet"
        case .hideDelay: return "Ausblende-Verz√∂gerung"
        case .language: return "Sprache"
        case .shotManagement: return "Shot-Verwaltung"
        case .maxShots: return "Maximale Anzahl Shots"
        case .resetAndCleanup: return "Reset & Bereinigung"
        case .deleteAllShots: return "Alle Shots l√∂schen"
        case .deleteAllShotsDescription: return "Entfernt alle gespeicherten Screenshots und Texte"
        case .deleteButton: return "L√∂schen"
        case .resetToDefaults: return "Auf Standard zur√ºcksetzen"
        case .livePreview: return "Live-Vorschau"
        case .barSettings: return "Bar-Einstellungen"
        case .barHeight: return "Bar H√∂he"
        case .transparency: return "Transparenz"
        case .cornerRadius: return "Ecken Rundung"
        case .shotSpacing: return "Shot Abstand"
        case .hotkeys: return "Tastenkombinationen"
        case .openShotDrop: return "ShotDrop √∂ffnen"
        case .globalHotkey: return "Globale Tastenkombination zum √ñffnen von ShotDrop"
        case .changeButton: return "√Ñndern"
        case .recordingPrompt: return "Dr√ºcken Sie die gew√ºnschte Tastenkombination..."
        case .hotkeyPlaceholder: return "üöß Hotkey-Funktionalit√§t wird implementiert"
        case .aboutShotDrop: return "√úber ShotDrop"
        case .version: return "Version 1.0"
        case .universalClipboard: return "Universal Clipboard Manager f√ºr macOS"
        case .settingsTooltip: return "ShotDrop Einstellungen"
        case .closeTooltip: return "ShotDrop schlie√üen"
        case .ocrTooltip: return "Text per OCR extrahieren"
        case .noClipboardContent: return "Keine Inhalte im Clipboard"
        case .copyButton: return "Kopieren"
        case .favoriteButton: return "Zu Favoriten"
        case .unfavoriteButton: return "Aus Favoriten"
        case .saveAsFile: return "Als Datei speichern..."
        case .deleteItem: return "L√∂schen"
        case .textCopied: return "Kopiert!"
        case .textCopiedDescription: return "Text wurde in die Zwischenablage kopiert und kann jetzt in Tools eingef√ºgt werden"
        case .ocrExtracted: return "Text aus Bild extrahiert und in Zwischenablage kopiert"
        case .fileTypeImage: return "Bild"
        case .fileTypeText: return "Text"
        case .fileTypePDF: return "PDF"
        case .fileTypeVideo: return "Video"
        case .fileTypeAudio: return "Audio"
        case .fileTypeDocument: return "Dokument"
        case .fileTypeArchive: return "Archiv"
        case .fileTypeOther: return "Datei"
        }
    }
    
    // MARK: - Italian Strings
    private var italianStrings: String {
        switch self {
        case .appName: return "ShotDrop"
        case .appDescription: return "Clipboard Universale per macOS"
        case .tabGeneral: return "Generale"
        case .tabShots: return "Shots"
        case .tabShortcuts: return "Scorciatoie"
        case .tabAppearance: return "Aspetto"
        case .designSection: return "Design"
        case .behaviorSection: return "Comportamento"
        case .colorScheme: return "Schema colori"
        case .autoShowOnCopy: return "Mostra automaticamente quando si copia"
        case .autoShowOnCopyDescription: return "La barra inferiore appare automaticamente quando si copia qualcosa"
        case .keepOpenOnIOSCopy: return "Mantieni aperto su copia iOS"
        case .keepOpenOnIOSCopyDescription: return "La barra inferiore rimane aperta quando si copia da dispositivo iOS"
        case .autoHide: return "Nascondi automaticamente"
        case .autoHideDescription: return "La barra inferiore si nasconde automaticamente dopo un po'"
        case .hideDelay: return "Ritardo nascondimento"
        case .language: return "Lingua"
        case .shotManagement: return "Gestione Shot"
        case .maxShots: return "Massimo shots"
        case .resetAndCleanup: return "Reset e Pulizia"
        case .deleteAllShots: return "Elimina tutti gli shot"
        case .deleteAllShotsDescription: return "Rimuove tutti gli screenshot e testi salvati"
        case .deleteButton: return "Elimina"
        case .resetToDefaults: return "Ripristina predefiniti"
        case .livePreview: return "Anteprima Live"
        case .barSettings: return "Impostazioni Barra"
        case .barHeight: return "Altezza barra"
        case .transparency: return "Trasparenza"
        case .cornerRadius: return "Raggio angoli"
        case .shotSpacing: return "Spaziatura shot"
        case .hotkeys: return "Tasti rapidi"
        case .openShotDrop: return "Apri ShotDrop"
        case .globalHotkey: return "Tasto rapido globale per aprire ShotDrop"
        case .changeButton: return "Cambia"
        case .recordingPrompt: return "Premi la combinazione di tasti desiderata..."
        case .hotkeyPlaceholder: return "üöß Funzionalit√† tasti rapidi sar√† implementata"
        case .aboutShotDrop: return "Informazioni su ShotDrop"
        case .version: return "Versione 1.0"
        case .universalClipboard: return "Gestore Clipboard Universale per macOS"
        case .settingsTooltip: return "Impostazioni ShotDrop"
        case .closeTooltip: return "Chiudi ShotDrop"
        case .ocrTooltip: return "Estrai testo tramite OCR"
        case .noClipboardContent: return "Nessun contenuto negli appunti"
        case .copyButton: return "Copia"
        case .favoriteButton: return "Aggiungi ai preferiti"
        case .unfavoriteButton: return "Rimuovi dai preferiti"
        case .saveAsFile: return "Salva come file..."
        case .deleteItem: return "Elimina"
        case .textCopied: return "Copiato!"
        case .textCopiedDescription: return "Testo copiato negli appunti e pu√≤ essere incollato negli strumenti"
        case .ocrExtracted: return "Testo estratto dall'immagine e copiato negli appunti"
        case .fileTypeImage: return "Immagine"
        case .fileTypeText: return "Testo"
        case .fileTypePDF: return "PDF"
        case .fileTypeVideo: return "Video"
        case .fileTypeAudio: return "Audio"
        case .fileTypeDocument: return "Documento"
        case .fileTypeArchive: return "Archivio"
        case .fileTypeOther: return "File"
        }
    }
    
    // MARK: - Spanish Strings
    private var spanishStrings: String {
        switch self {
        case .appName: return "ShotDrop"
        case .appDescription: return "Portapapeles Universal para macOS"
        case .tabGeneral: return "General"
        case .tabShots: return "Shots"
        case .tabShortcuts: return "Atajos"
        case .tabAppearance: return "Apariencia"
        case .designSection: return "Dise√±o"
        case .behaviorSection: return "Comportamiento"
        case .colorScheme: return "Esquema de colores"
        case .autoShowOnCopy: return "Mostrar autom√°ticamente al copiar"
        case .autoShowOnCopyDescription: return "La barra inferior aparece autom√°ticamente cuando se copia algo"
        case .keepOpenOnIOSCopy: return "Mantener abierto en copia iOS"
        case .keepOpenOnIOSCopyDescription: return "La barra inferior permanece abierta cuando se copia desde dispositivo iOS"
        case .autoHide: return "Ocultar autom√°ticamente"
        case .autoHideDescription: return "La barra inferior se oculta autom√°ticamente despu√©s de un tiempo"
        case .hideDelay: return "Retraso de ocultaci√≥n"
        case .language: return "Idioma"
        case .shotManagement: return "Gesti√≥n de Shots"
        case .maxShots: return "M√°ximo shots"
        case .resetAndCleanup: return "Reset y Limpieza"
        case .deleteAllShots: return "Eliminar todos los shots"
        case .deleteAllShotsDescription: return "Elimina todas las capturas de pantalla y textos guardados"
        case .deleteButton: return "Eliminar"
        case .resetToDefaults: return "Restaurar predeterminados"
        case .livePreview: return "Vista Previa en Vivo"
        case .barSettings: return "Configuraci√≥n de Barra"
        case .barHeight: return "Altura de barra"
        case .transparency: return "Transparencia"
        case .cornerRadius: return "Radio de esquinas"
        case .shotSpacing: return "Espaciado de shot"
        case .hotkeys: return "Teclas de acceso r√°pido"
        case .openShotDrop: return "Abrir ShotDrop"
        case .globalHotkey: return "Tecla de acceso r√°pido global para abrir ShotDrop"
        case .changeButton: return "Cambiar"
        case .recordingPrompt: return "Presiona la combinaci√≥n de teclas deseada..."
        case .hotkeyPlaceholder: return "üöß Funcionalidad de teclas r√°pidas ser√° implementada"
        case .aboutShotDrop: return "Acerca de ShotDrop"
        case .version: return "Versi√≥n 1.0"
        case .universalClipboard: return "Gestor de Portapapeles Universal para macOS"
        case .settingsTooltip: return "Configuraci√≥n de ShotDrop"
        case .closeTooltip: return "Cerrar ShotDrop"
        case .ocrTooltip: return "Extraer texto via OCR"
        case .noClipboardContent: return "Sin contenido en el portapapeles"
        case .copyButton: return "Copiar"
        case .favoriteButton: return "A√±adir a favoritos"
        case .unfavoriteButton: return "Quitar de favoritos"
        case .saveAsFile: return "Guardar como archivo..."
        case .deleteItem: return "Eliminar"
        case .textCopied: return "¬°Copiado!"
        case .textCopiedDescription: return "Texto copiado al portapapeles y puede ser pegado en herramientas"
        case .ocrExtracted: return "Texto extra√≠do de la imagen y copiado al portapapeles"
        case .fileTypeImage: return "Imagen"
        case .fileTypeText: return "Texto"
        case .fileTypePDF: return "PDF"
        case .fileTypeVideo: return "Video"
        case .fileTypeAudio: return "Audio"
        case .fileTypeDocument: return "Documento"
        case .fileTypeArchive: return "Archivo"
        case .fileTypeOther: return "Archivo"
        }
    }
    
    // MARK: - French Strings
    private var frenchStrings: String {
        switch self {
        case .appName: return "ShotDrop"
        case .appDescription: return "Presse-papiers Universel pour macOS"
        case .tabGeneral: return "G√©n√©ral"
        case .tabShots: return "Shots"
        case .tabShortcuts: return "Raccourcis"
        case .tabAppearance: return "Apparence"
        case .designSection: return "Design"
        case .behaviorSection: return "Comportement"
        case .colorScheme: return "Sch√©ma de couleurs"
        case .autoShowOnCopy: return "Afficher automatiquement lors de la copie"
        case .autoShowOnCopyDescription: return "La barre inf√©rieure appara√Æt automatiquement quand quelque chose est copi√©"
        case .keepOpenOnIOSCopy: return "Garder ouvert sur copie iOS"
        case .keepOpenOnIOSCopyDescription: return "La barre inf√©rieure reste ouverte quand copi√© depuis appareil iOS"
        case .autoHide: return "Masquer automatiquement"
        case .autoHideDescription: return "La barre inf√©rieure se masque automatiquement apr√®s un certain temps"
        case .hideDelay: return "D√©lai de masquage"
        case .language: return "Langue"
        case .shotManagement: return "Gestion des Shots"
        case .maxShots: return "Maximum shots"
        case .resetAndCleanup: return "Reset et Nettoyage"
        case .deleteAllShots: return "Supprimer tous les shots"
        case .deleteAllShotsDescription: return "Supprime toutes les captures d'√©cran et textes sauvegard√©s"
        case .deleteButton: return "Supprimer"
        case .resetToDefaults: return "Restaurer par d√©faut"
        case .livePreview: return "Aper√ßu en Direct"
        case .barSettings: return "Param√®tres de Barre"
        case .barHeight: return "Hauteur de barre"
        case .transparency: return "Transparence"
        case .cornerRadius: return "Rayon des coins"
        case .shotSpacing: return "Espacement des shots"
        case .hotkeys: return "Raccourcis clavier"
        case .openShotDrop: return "Ouvrir ShotDrop"
        case .globalHotkey: return "Raccourci clavier global pour ouvrir ShotDrop"
        case .changeButton: return "Changer"
        case .recordingPrompt: return "Appuyez sur la combinaison de touches d√©sir√©e..."
        case .hotkeyPlaceholder: return "üöß Fonctionnalit√© raccourcis sera impl√©ment√©e"
        case .aboutShotDrop: return "√Ä propos de ShotDrop"
        case .version: return "Version 1.0"
        case .universalClipboard: return "Gestionnaire de Presse-papiers Universel pour macOS"
        case .settingsTooltip: return "Param√®tres ShotDrop"
        case .closeTooltip: return "Fermer ShotDrop"
        case .ocrTooltip: return "Extraire texte via OCR"
        case .noClipboardContent: return "Aucun contenu dans le presse-papiers"
        case .copyButton: return "Copier"
        case .favoriteButton: return "Ajouter aux favoris"
        case .unfavoriteButton: return "Retirer des favoris"
        case .saveAsFile: return "Sauvegarder comme fichier..."
        case .deleteItem: return "Supprimer"
        case .textCopied: return "Copi√© !"
        case .textCopiedDescription: return "Texte copi√© dans le presse-papiers et peut √™tre coll√© dans les outils"
        case .ocrExtracted: return "Texte extrait de l'image et copi√© dans le presse-papiers"
        case .fileTypeImage: return "Image"
        case .fileTypeText: return "Texte"
        case .fileTypePDF: return "PDF"
        case .fileTypeVideo: return "Vid√©o"
        case .fileTypeAudio: return "Audio"
        case .fileTypeDocument: return "Document"
        case .fileTypeArchive: return "Archive"
        case .fileTypeOther: return "Fichier"
        }
    }
    
    // MARK: - Japanese Strings
    private var japaneseStrings: String {
        switch self {
        case .appName: return "ShotDrop"
        case .appDescription: return "macOSÁî®„É¶„Éã„Éê„Éº„Çµ„É´„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ"
        case .tabGeneral: return "‰∏ÄËà¨"
        case .tabShots: return "„Ç∑„Éß„ÉÉ„Éà"
        case .tabShortcuts: return "„Ç∑„Éß„Éº„Éà„Ç´„ÉÉ„Éà"
        case .tabAppearance: return "Â§ñË¶≥"
        case .designSection: return "„Éá„Ç∂„Ç§„É≥"
        case .behaviorSection: return "Âãï‰Ωú"
        case .colorScheme: return "„Ç´„É©„Éº„Çπ„Ç≠„Éº„É†"
        case .autoShowOnCopy: return "„Ç≥„Éî„ÉºÊôÇ„Å´Ëá™ÂãïË°®Á§∫"
        case .autoShowOnCopyDescription: return "‰Ωï„Åã„Åå„Ç≥„Éî„Éº„Åï„Çå„ÅüÊôÇ„Å´„Éú„Éà„É†„Éê„Éº„ÅåËá™ÂãïÁöÑ„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô"
        case .keepOpenOnIOSCopy: return "iOS„Ç≥„Éî„ÉºÊôÇ„ÅØÈñã„ÅÑ„Åü„Åæ„Åæ"
        case .keepOpenOnIOSCopyDescription: return "iOS„Éá„Éê„Ç§„Çπ„Åã„Çâ„Ç≥„Éî„Éº„Åï„Çå„ÅüÊôÇ„Å´„Éú„Éà„É†„Éê„Éº„ÅåÈñã„ÅÑ„Åü„Åæ„Åæ„Å´„Å™„Çä„Åæ„Åô"
        case .autoHide: return "Ëá™ÂãïÈùûË°®Á§∫"
        case .autoHideDescription: return "„Åó„Å∞„Çâ„Åè„Åô„Çã„Å®„Éú„Éà„É†„Éê„Éº„ÅåËá™ÂãïÁöÑ„Å´ÈùûË°®Á§∫„Å´„Å™„Çä„Åæ„Åô"
        case .hideDelay: return "ÈùûË°®Á§∫ÈÅÖÂª∂"
        case .language: return "Ë®ÄË™û"
        case .shotManagement: return "„Ç∑„Éß„ÉÉ„ÉàÁÆ°ÁêÜ"
        case .maxShots: return "ÊúÄÂ§ß„Ç∑„Éß„ÉÉ„ÉàÊï∞"
        case .resetAndCleanup: return "„É™„Çª„ÉÉ„Éà„Å®„ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó"
        case .deleteAllShots: return "„Åô„Åπ„Å¶„ÅÆ„Ç∑„Éß„ÉÉ„Éà„ÇíÂâäÈô§"
        case .deleteAllShotsDescription: return "‰øùÂ≠ò„Åï„Çå„Åü„Åô„Åπ„Å¶„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà„Å®„ÉÜ„Ç≠„Çπ„Éà„ÇíÂâäÈô§„Åó„Åæ„Åô"
        case .deleteButton: return "ÂâäÈô§"
        case .resetToDefaults: return "„Éá„Éï„Ç©„É´„Éà„Å´„É™„Çª„ÉÉ„Éà"
        case .livePreview: return "„É©„Ç§„Éñ„Éó„É¨„Éì„É•„Éº"
        case .barSettings: return "„Éê„ÉºË®≠ÂÆö"
        case .barHeight: return "„Éê„Éº„ÅÆÈ´ò„Åï"
        case .transparency: return "ÈÄèÊòéÂ∫¶"
        case .cornerRadius: return "Ëßí„ÅÆ‰∏∏„Åø"
        case .shotSpacing: return "„Ç∑„Éß„ÉÉ„ÉàÈñìÈöî"
        case .hotkeys: return "„Éõ„ÉÉ„Éà„Ç≠„Éº"
        case .openShotDrop: return "ShotDrop„ÇíÈñã„Åè"
        case .globalHotkey: return "ShotDrop„ÇíÈñã„Åè„Ç∞„É≠„Éº„Éê„É´„Éõ„ÉÉ„Éà„Ç≠„Éº"
        case .changeButton: return "Â§âÊõ¥"
        case .recordingPrompt: return "Â∏åÊúõ„Åô„Çã„Ç≠„Éº„ÅÆÁµÑ„ÅøÂêà„Çè„Åõ„ÇíÊäº„Åó„Å¶„Åè„Å†„Åï„ÅÑ..."
        case .hotkeyPlaceholder: return "üöß „Éõ„ÉÉ„Éà„Ç≠„ÉºÊ©üËÉΩ„ÅØÂÆüË£Ö‰∫àÂÆö„Åß„Åô"
        case .aboutShotDrop: return "ShotDrop„Å´„Å§„ÅÑ„Å¶"
        case .version: return "„Éê„Éº„Ç∏„Éß„É≥ 1.0"
        case .universalClipboard: return "macOSÁî®„É¶„Éã„Éê„Éº„Çµ„É´„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Éû„Éç„Éº„Ç∏„É£„Éº"
        case .settingsTooltip: return "ShotDropË®≠ÂÆö"
        case .closeTooltip: return "ShotDrop„ÇíÈñâ„Åò„Çã"
        case .ocrTooltip: return "OCR„Åß„ÉÜ„Ç≠„Çπ„Éà„ÇíÊäΩÂá∫"
        case .noClipboardContent: return "„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì"
        case .copyButton: return "„Ç≥„Éî„Éº"
        case .favoriteButton: return "„ÅäÊ∞ó„Å´ÂÖ•„Çä„Å´ËøΩÂä†"
        case .unfavoriteButton: return "„ÅäÊ∞ó„Å´ÂÖ•„Çä„Åã„ÇâÂâäÈô§"
        case .saveAsFile: return "„Éï„Ç°„Ç§„É´„Å®„Åó„Å¶‰øùÂ≠ò..."
        case .deleteItem: return "ÂâäÈô§"
        case .textCopied: return "„Ç≥„Éî„Éº„Åó„Åæ„Åó„ÅüÔºÅ"
        case .textCopiedDescription: return "„ÉÜ„Ç≠„Çπ„Éà„Åå„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åï„Çå„ÄÅ„ÉÑ„Éº„É´„Å´Ë≤º„Çä‰ªò„Åë„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô"
        case .ocrExtracted: return "ÁîªÂÉè„Åã„Çâ„ÉÜ„Ç≠„Çπ„Éà„ÇíÊäΩÂá∫„Åó„Å¶„ÇØ„É™„ÉÉ„Éó„Éú„Éº„Éâ„Å´„Ç≥„Éî„Éº„Åó„Åæ„Åó„Åü"
        case .fileTypeImage: return "ÁîªÂÉè"
        case .fileTypeText: return "„ÉÜ„Ç≠„Çπ„Éà"
        case .fileTypePDF: return "PDF"
        case .fileTypeVideo: return "ÂãïÁîª"
        case .fileTypeAudio: return "Èü≥Â£∞"
        case .fileTypeDocument: return "ÊñáÊõ∏"
        case .fileTypeArchive: return "„Ç¢„Éº„Ç´„Ç§„Éñ"
        case .fileTypeOther: return "„Éï„Ç°„Ç§„É´"
        }
    }
    
    // MARK: - Chinese Strings
    private var chineseStrings: String {
        switch self {
        case .appName: return "ShotDrop"
        case .appDescription: return "macOSÈÄöÁî®Ââ™Ë¥¥Êùø"
        case .tabGeneral: return "Â∏∏ËßÑ"
        case .tabShots: return "Êà™Âõæ"
        case .tabShortcuts: return "Âø´Êç∑ÈîÆ"
        case .tabAppearance: return "Â§ñËßÇ"
        case .designSection: return "ËÆæËÆ°"
        case .behaviorSection: return "Ë°å‰∏∫"
        case .colorScheme: return "ÈÖçËâ≤ÊñπÊ°à"
        case .autoShowOnCopy: return "Â§çÂà∂Êó∂Ëá™Âä®ÊòæÁ§∫"
        case .autoShowOnCopyDescription: return "Â§çÂà∂ÂÜÖÂÆπÊó∂Â∫ïÈÉ®Ê†èËá™Âä®ÊòæÁ§∫"
        case .keepOpenOnIOSCopy: return "iOSÂ§çÂà∂Êó∂‰øùÊåÅÊâìÂºÄ"
        case .keepOpenOnIOSCopyDescription: return "‰ªéiOSËÆæÂ§áÂ§çÂà∂Êó∂Â∫ïÈÉ®Ê†è‰øùÊåÅÊâìÂºÄ"
        case .autoHide: return "Ëá™Âä®ÈöêËóè"
        case .autoHideDescription: return "‰∏ÄÊÆµÊó∂Èó¥ÂêéÂ∫ïÈÉ®Ê†èËá™Âä®ÈöêËóè"
        case .hideDelay: return "ÈöêËóèÂª∂Ëøü"
        case .language: return "ËØ≠Ë®Ä"
        case .shotManagement: return "Êà™ÂõæÁÆ°ÁêÜ"
        case .maxShots: return "ÊúÄÂ§ßÊà™ÂõæÊï∞"
        case .resetAndCleanup: return "ÈáçÁΩÆÂíåÊ∏ÖÁêÜ"
        case .deleteAllShots: return "Âà†Èô§ÊâÄÊúâÊà™Âõæ"
        case .deleteAllShotsDescription: return "Âà†Èô§ÊâÄÊúâ‰øùÂ≠òÁöÑÊà™ÂõæÂíåÊñáÊú¨"
        case .deleteButton: return "Âà†Èô§"
        case .resetToDefaults: return "ÈáçÁΩÆ‰∏∫ÈªòËÆ§ÂÄº"
        case .livePreview: return "ÂÆûÊó∂È¢ÑËßà"
        case .barSettings: return "Ê†èËÆæÁΩÆ"
        case .barHeight: return "Ê†èÈ´òÂ∫¶"
        case .transparency: return "ÈÄèÊòéÂ∫¶"
        case .cornerRadius: return "ÂúÜËßíÂçäÂæÑ"
        case .shotSpacing: return "Êà™ÂõæÈó¥Ë∑ù"
        case .hotkeys: return "ÁÉ≠ÈîÆ"
        case .openShotDrop: return "ÊâìÂºÄShotDrop"
        case .globalHotkey: return "ÊâìÂºÄShotDropÁöÑÂÖ®Â±ÄÁÉ≠ÈîÆ"
        case .changeButton: return "Êõ¥Êîπ"
        case .recordingPrompt: return "ËØ∑Êåâ‰∏ãÊâÄÈúÄÁöÑÊåâÈîÆÁªÑÂêà..."
        case .hotkeyPlaceholder: return "üöß ÁÉ≠ÈîÆÂäüËÉΩÂ∞ÜË¢´ÂÆûÁé∞"
        case .aboutShotDrop: return "ÂÖ≥‰∫éShotDrop"
        case .version: return "ÁâàÊú¨ 1.0"
        case .universalClipboard: return "macOSÈÄöÁî®Ââ™Ë¥¥ÊùøÁÆ°ÁêÜÂô®"
        case .settingsTooltip: return "ShotDropËÆæÁΩÆ"
        case .closeTooltip: return "ÂÖ≥Èó≠ShotDrop"
        case .ocrTooltip: return "ÈÄöËøáOCRÊèêÂèñÊñáÊú¨"
        case .noClipboardContent: return "Ââ™Ë¥¥Êùø‰∏≠Ê≤°ÊúâÂÜÖÂÆπ"
        case .copyButton: return "Â§çÂà∂"
        case .favoriteButton: return "Ê∑ªÂä†Âà∞Êî∂Ëóè"
        case .unfavoriteButton: return "‰ªéÊî∂Ëóè‰∏≠ÁßªÈô§"
        case .saveAsFile: return "Âè¶Â≠ò‰∏∫Êñá‰ª∂..."
        case .deleteItem: return "Âà†Èô§"
        case .textCopied: return "Â∑≤Â§çÂà∂ÔºÅ"
        case .textCopiedDescription: return "ÊñáÊú¨Â∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥ÊùøÔºåÂèØ‰ª•Á≤òË¥¥Âà∞Â∑•ÂÖ∑‰∏≠"
        case .ocrExtracted: return "‰ªéÂõæÂÉè‰∏≠ÊèêÂèñÊñáÊú¨Âπ∂Â§çÂà∂Âà∞Ââ™Ë¥¥Êùø"
        case .fileTypeImage: return "ÂõæÂÉè"
        case .fileTypeText: return "ÊñáÊú¨"
        case .fileTypePDF: return "PDF"
        case .fileTypeVideo: return "ËßÜÈ¢ë"
        case .fileTypeAudio: return "Èü≥È¢ë"
        case .fileTypeDocument: return "ÊñáÊ°£"
        case .fileTypeArchive: return "Â≠òÊ°£"
        case .fileTypeOther: return "Êñá‰ª∂"
        }
    }
}

// MARK: - View Extension for easy localization
extension Text {
    init(_ localizedString: LocalizedString) {
        self.init(localizedString.localized)
    }
}